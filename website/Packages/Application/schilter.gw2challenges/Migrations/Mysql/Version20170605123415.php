<?php
namespace Neos\Flow\Persistence\Doctrine\Migrations;

use Doctrine\DBAL\Migrations\AbstractMigration;
use Doctrine\DBAL\Schema\Schema;

/**
 * Auto-generated Migration: Please modify to your needs! This block will be used as the migration description if getDescription() is not used.
 */
class Version20170605123415 extends AbstractMigration
{

    /**
     * @return string
     */
    public function getDescription()
    {
        return '';
    }

    /**
     * @param Schema $schema
     * @return void
     */
    public function up(Schema $schema)
    {
        // this up() migration is autogenerated, please modify it to your needs
        $this->abortIf($this->connection->getDatabasePlatform()->getName() != 'mysql', 'Migration can only be executed safely on "mysql".');
        
        $this->addSql('CREATE TABLE schilter_gw2challenges_domain_model_mini (persistence_object_identifier VARCHAR(40) NOT NULL, id INT NOT NULL, name VARCHAR(255) NOT NULL, icon VARCHAR(255) NOT NULL, PRIMARY KEY(persistence_object_identifier)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB');
        $this->addSql('CREATE TABLE schilter_gw2challenges_domain_model_challenge (persistence_object_identifier VARCHAR(40) NOT NULL, minis VARCHAR(40) DEFAULT NULL, id INT NOT NULL, name VARCHAR(255) NOT NULL, INDEX IDX_A214DA7DDED4EA2A (minis), PRIMARY KEY(persistence_object_identifier)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB');
        $this->addSql('CREATE TABLE schilter_gw2challenges_domain_model_user (persistence_object_identifier VARCHAR(40) NOT NULL, account VARCHAR(40) DEFAULT NULL, minis VARCHAR(40) DEFAULT NULL, challenges VARCHAR(40) DEFAULT NULL, apikey VARCHAR(255) NOT NULL, UNIQUE INDEX UNIQ_A0541CFC7D3656A4 (account), INDEX IDX_A0541CFCDED4EA2A (minis), INDEX IDX_A0541CFC7B5A7E0 (challenges), PRIMARY KEY(persistence_object_identifier)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB');
        $this->addSql('ALTER TABLE schilter_gw2challenges_domain_model_challenge ADD CONSTRAINT FK_A214DA7DDED4EA2A FOREIGN KEY (minis) REFERENCES schilter_gw2challenges_domain_model_mini (persistence_object_identifier)');
        $this->addSql('ALTER TABLE schilter_gw2challenges_domain_model_user ADD CONSTRAINT FK_A0541CFC7D3656A4 FOREIGN KEY (account) REFERENCES neos_flow_security_account (persistence_object_identifier)');
        $this->addSql('ALTER TABLE schilter_gw2challenges_domain_model_user ADD CONSTRAINT FK_A0541CFCDED4EA2A FOREIGN KEY (minis) REFERENCES schilter_gw2challenges_domain_model_mini (persistence_object_identifier)');
        $this->addSql('ALTER TABLE schilter_gw2challenges_domain_model_user ADD CONSTRAINT FK_A0541CFC7B5A7E0 FOREIGN KEY (challenges) REFERENCES schilter_gw2challenges_domain_model_challenge (persistence_object_identifier)');
    }

    /**
     * @param Schema $schema
     * @return void
     */
    public function down(Schema $schema)
    {
        // this down() migration is autogenerated, please modify it to your needs
        $this->abortIf($this->connection->getDatabasePlatform()->getName() != 'mysql', 'Migration can only be executed safely on "mysql".');
        
        $this->addSql('ALTER TABLE schilter_gw2challenges_domain_model_challenge DROP FOREIGN KEY FK_A214DA7DDED4EA2A');
        $this->addSql('ALTER TABLE schilter_gw2challenges_domain_model_user DROP FOREIGN KEY FK_A0541CFCDED4EA2A');
        $this->addSql('ALTER TABLE schilter_gw2challenges_domain_model_user DROP FOREIGN KEY FK_A0541CFC7B5A7E0');
        $this->addSql('DROP TABLE schilter_gw2challenges_domain_model_mini');
        $this->addSql('DROP TABLE schilter_gw2challenges_domain_model_challenge');
        $this->addSql('DROP TABLE schilter_gw2challenges_domain_model_user');
    }
}