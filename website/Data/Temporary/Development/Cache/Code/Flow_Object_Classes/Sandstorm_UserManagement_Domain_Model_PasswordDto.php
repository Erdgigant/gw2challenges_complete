<?php 
/**
 * Created by IntelliJ IDEA.
 * User: sebastian
 * Date: 24.05.16
 * Time: 12:35
 */

namespace Sandstorm\UserManagement\Domain\Model;

use Neos\Flow\Annotations as Flow;
use Neos\Flow\Exception;
use Neos\Flow\Security\Cryptography\HashService;

class PasswordDto_Original
{

    /**
     * @var string
     */
    protected $password;

    /**
     * @var string
     */
    protected $passwordConfirmation;

    /**
     * @Flow\Inject
     * @var HashService
     */
    protected $hashService;

    /**
     * @param string $password
     */
    public function setPassword($password)
    {
        $this->password = $password;
    }

    /**
     * @param string $passwordConfirmation
     */
    public function setPasswordConfirmation($passwordConfirmation)
    {
        $this->passwordConfirmation = $passwordConfirmation;
    }

    public function arePasswordsEqual()
    {
        return !empty($this->password) && !empty(trim($this->password)) &&
        ($this->password === $this->passwordConfirmation);
    }

    public function getEncryptedPasswordAndRemoveNonencryptedVersion()
    {
        if (!$this->arePasswordsEqual()) {
            throw new Exception('Passwords are not equal; so it is not allowed to call getEncryptedPassword().',
                1464087097);
        }

        $encrypted = $this->hashService->hashPassword($this->password);
        $this->password = null;
        $this->passwordConfirmation = null;

        return $encrypted;
    }
}

#
# Start of Flow generated Proxy code
#
namespace Sandstorm\UserManagement\Domain\Model;

use Doctrine\ORM\Mapping as ORM;
use Neos\Flow\Annotations as Flow;

/**
 * 
 */
class PasswordDto extends PasswordDto_Original implements \Neos\Flow\ObjectManagement\Proxy\ProxyInterface {

    use \Neos\Flow\ObjectManagement\Proxy\ObjectSerializationTrait, \Neos\Flow\ObjectManagement\DependencyInjection\PropertyInjectionTrait;


    /**
     * Autogenerated Proxy Method
     */
    public function __construct()
    {
        if ('Sandstorm\UserManagement\Domain\Model\PasswordDto' === get_class($this)) {
            $this->Flow_Proxy_injectProperties();
        }
    }

    /**
     * Autogenerated Proxy Method
     */
    public function __sleep()
    {
            $result = NULL;
        $this->Flow_Object_PropertiesToSerialize = array();

        $transientProperties = array (
);
        $propertyVarTags = array (
  'password' => 'string',
  'passwordConfirmation' => 'string',
  'hashService' => 'Neos\\Flow\\Security\\Cryptography\\HashService',
);
        $result = $this->Flow_serializeRelatedEntities($transientProperties, $propertyVarTags);
        return $result;
    }

    /**
     * Autogenerated Proxy Method
     */
    public function __wakeup()
    {

        $this->Flow_setRelatedEntities();
        $this->Flow_Proxy_injectProperties();
    }

    /**
     * Autogenerated Proxy Method
     */
    private function Flow_Proxy_injectProperties()
    {
        $this->Flow_Proxy_LazyPropertyInjection('Neos\Flow\Security\Cryptography\HashService', 'Neos\Flow\Security\Cryptography\HashService', 'hashService', '62d57ff7e7ce903303c867dd468c12fd', function() { return \Neos\Flow\Core\Bootstrap::$staticObjectManager->get('Neos\Flow\Security\Cryptography\HashService'); });
        $this->Flow_Injected_Properties = array (
  0 => 'hashService',
);
    }
}
# PathAndFilename: /var/www/php/Packages/Application/Sandstorm.UserManagement/Classes/Domain/Model/PasswordDto.php
#