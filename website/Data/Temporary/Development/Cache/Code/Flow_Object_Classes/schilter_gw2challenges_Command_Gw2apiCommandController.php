<?php 
namespace schilter\gw2challenges\Command;

use Neos\Flow\Annotations as Flow;

class Gw2apiCommandController_Original extends \Neos\Flow\Cli\CommandController {

	const API_URL = 'https://api.guildwars2.com/v2/minis?ids=all&lang=de';

	/**
	 * @Flow\Inject
	 * @var \schilter\gw2challenges\Domain\Repository\MiniRepository
	 */
	protected $miniRepository;

	public function loadMinisCommand(){
		$minis = json_decode(file_get_contents(self::API_URL), true);
		$this->miniRepository->removeAll();
		$this->miniRepository->createMinis($minis);
	}
}
#
# Start of Flow generated Proxy code
#
namespace schilter\gw2challenges\Command;

use Doctrine\ORM\Mapping as ORM;
use Neos\Flow\Annotations as Flow;

/**
 * 
 */
class Gw2apiCommandController extends Gw2apiCommandController_Original implements \Neos\Flow\ObjectManagement\Proxy\ProxyInterface {

    use \Neos\Flow\ObjectManagement\Proxy\ObjectSerializationTrait, \Neos\Flow\ObjectManagement\DependencyInjection\PropertyInjectionTrait;


    /**
     * Autogenerated Proxy Method
     */
    public function __construct()
    {
        parent::__construct();
        if ('schilter\gw2challenges\Command\Gw2apiCommandController' === get_class($this)) {
            $this->Flow_Proxy_injectProperties();
        }
    }

    /**
     * Autogenerated Proxy Method
     */
    public function __sleep()
    {
            $result = NULL;
        $this->Flow_Object_PropertiesToSerialize = array();

        $transientProperties = array (
);
        $propertyVarTags = array (
  'miniRepository' => '\\schilter\\gw2challenges\\Domain\\Repository\\MiniRepository',
  'request' => 'Neos\\Flow\\Cli\\Request',
  'response' => 'Neos\\Flow\\Cli\\Response',
  'arguments' => 'Neos\\Flow\\Mvc\\Controller\\Arguments',
  'commandMethodName' => 'string',
  'objectManager' => 'Neos\\Flow\\ObjectManagement\\ObjectManagerInterface',
  'commandManager' => 'Neos\\Flow\\Cli\\CommandManager',
  'output' => 'Neos\\Flow\\Cli\\ConsoleOutput',
);
        $result = $this->Flow_serializeRelatedEntities($transientProperties, $propertyVarTags);
        return $result;
    }

    /**
     * Autogenerated Proxy Method
     */
    public function __wakeup()
    {

        $this->Flow_setRelatedEntities();
        $this->Flow_Proxy_injectProperties();
    }

    /**
     * Autogenerated Proxy Method
     */
    private function Flow_Proxy_injectProperties()
    {
        $this->injectCommandManager(\Neos\Flow\Core\Bootstrap::$staticObjectManager->get('Neos\Flow\Cli\CommandManager'));
        $this->injectObjectManager(\Neos\Flow\Core\Bootstrap::$staticObjectManager->get('Neos\Flow\ObjectManagement\ObjectManagerInterface'));
        $this->Flow_Proxy_LazyPropertyInjection('schilter\gw2challenges\Domain\Repository\MiniRepository', 'schilter\gw2challenges\Domain\Repository\MiniRepository', 'miniRepository', 'b3e18de92e5fae7ba6088f5d18991785', function() { return \Neos\Flow\Core\Bootstrap::$staticObjectManager->get('schilter\gw2challenges\Domain\Repository\MiniRepository'); });
        $this->Flow_Injected_Properties = array (
  0 => 'commandManager',
  1 => 'objectManager',
  2 => 'miniRepository',
);
    }
}
# PathAndFilename: /var/www/php/Packages/Application/schilter.gw2challenges/Classes/Command/Gw2apiCommandController.php
#